// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace AcaraDataRequestApplication.Migrations
{
    [DbContext(typeof(DataRequestApplicationDbContext))]
    partial class DataRequestApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.DataRequestApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorisedSignatoryName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("AuthorisedSignatoryPosition")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("AuthorisedUsers")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CustomisedRequestText")
                        .HasMaxLength(500);

                    b.Property<bool>("CustomisedRequest_IsAllYears");

                    b.Property<bool>("CustomisedRequest_IsCurrentYear");

                    b.Property<string>("DetailedDescriptionOfTheIntendedUse")
                        .IsRequired();

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("EnrolmentsByGrade_IsAllYears");

                    b.Property<bool>("EnrolmentsByGrade_IsCurrentYear");

                    b.Property<bool>("Finance_IsAllYears");

                    b.Property<bool>("Finance_IsCurrentYear");

                    b.Property<DateTime>("LicensePeriod");

                    b.Property<bool>("NAPLAN_IsAllYears");

                    b.Property<bool>("NAPLAN_IsCurrentYear");

                    b.Property<bool>("NAPLAN_SameStartingScoreGain_IsAllYears");

                    b.Property<bool>("NAPLAN_SameStartingScoreGain_IsCurrentYear");

                    b.Property<bool>("NAPLAN_SimilarSchoolsGain_IsAllYears");

                    b.Property<bool>("NAPLAN_SimilarSchoolsGain_IsCurrentYear");

                    b.Property<bool>("NAPLAN_SimilarSchools_IsAllYears");

                    b.Property<bool>("NAPLAN_SimilarSchools_IsCurrentYear");

                    b.Property<bool>("NAPLAN_SimpleStudentGain_IsAllYears");

                    b.Property<bool>("NAPLAN_SimpleStudentGain_IsCurrentYear");

                    b.Property<string>("OrganisationABN")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("OrganisationLegalName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("OrganisationPhysicalAddress")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("PlannedProductsFromTheDataProvided")
                        .IsRequired();

                    b.Property<bool>("SchoolAttendance_IsAllYears");

                    b.Property<bool>("SchoolAttendance_IsCurrentYear");

                    b.Property<bool>("SeniorSecondary_IsAllYears");

                    b.Property<bool>("SeniorSecondary_IsCurrentYear");

                    b.Property<int>("Status");

                    b.Property<bool>("StudentLevelDeidentified_IsAllYears");

                    b.Property<bool>("StudentLevelDeidentified_IsCurrentYear");

                    b.Property<bool>("VETInSchools_IsAllYears");

                    b.Property<bool>("VETInSchools_IsCurrentYear");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("DataRequestApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
